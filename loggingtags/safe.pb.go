// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: loggingtags/safe.proto

// protoc-gen-loggingtags generates a LoggingTags() map[string]interface{}
// function for every message in a protobuf spec. This extension adds the
// ability to mark a field as safe to opt it into being logged via that
// mechanism. You can annotate individual fields, like so:
//
//     message Confidential {
//         string secret_data = 1;
//         string public_data = 2 [(heroku.loggingtags.safe) = true];
//     }

package loggingtags

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_loggingtags_safe_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50000,
		Name:          "heroku.loggingtags.safe",
		Tag:           "varint,50000,opt,name=safe",
		Filename:      "loggingtags/safe.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional bool safe = 50000;
	E_Safe = &file_loggingtags_safe_proto_extTypes[0]
)

var File_loggingtags_safe_proto protoreflect.FileDescriptor

var file_loggingtags_safe_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x74, 0x61, 0x67, 0x73, 0x2f, 0x73, 0x61,
	0x66, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x68, 0x65, 0x72, 0x6f, 0x6b, 0x75,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x33,
	0x0a, 0x04, 0x73, 0x61, 0x66, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x61, 0x66, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x68, 0x65, 0x72, 0x6f, 0x6b, 0x75, 0x2f, 0x78, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x74, 0x61, 0x67, 0x73, 0x3b, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x74, 0x61,
	0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_loggingtags_safe_proto_goTypes = []interface{}{
	(*descriptorpb.FieldOptions)(nil), // 0: google.protobuf.FieldOptions
}
var file_loggingtags_safe_proto_depIdxs = []int32{
	0, // 0: heroku.loggingtags.safe:extendee -> google.protobuf.FieldOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_loggingtags_safe_proto_init() }
func file_loggingtags_safe_proto_init() {
	if File_loggingtags_safe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loggingtags_safe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_loggingtags_safe_proto_goTypes,
		DependencyIndexes: file_loggingtags_safe_proto_depIdxs,
		ExtensionInfos:    file_loggingtags_safe_proto_extTypes,
	}.Build()
	File_loggingtags_safe_proto = out.File
	file_loggingtags_safe_proto_rawDesc = nil
	file_loggingtags_safe_proto_goTypes = nil
	file_loggingtags_safe_proto_depIdxs = nil
}
